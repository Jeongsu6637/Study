<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

<!--  표시 이름을 설정하는것. 표시 이름은 웹 어플리케이션을 구성하는  xml 파일중 web.xml에 위치함.
      이 설정은 웹 어플리케이션을 배포할때 웹 서버 또는 관리도구에서 이름을 표시하는데 사용됨.-->
  <display-name>Archetype Created Web Application</display-name>

<!--  컨텍스트 파일 경로를 설정하는것.
      contextConfigLocation 라는 컨텍스트 파라미터에 spring/root-context.xml 이라는 값(경로)를 지정-->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>spring/root-context.xml</param-value>
  </context-param>

<!--  listener는 웹 애플리케이션에서 이벤트를 수신하고 처리하는 리스너를 설정
      즉. listener를 사용하겠다.-->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

<!--  "appServlet"이라는 이름의 서블릿을 생성하고, 해당 서블릿에 "contextConfigLocation"이라는
      초기화 파라미터를 설정하여 "spring/appServlet/servlet-context.xml" 파일을 지정하는 역할을
      합니다. 이를 통해 DispatcherServlet은 해당 설정 파일을 사용하여 Spring의 서블릿 컨텍스트를
      초기화하고 관리할 수 있습니다.-->
  <servlet>
    <servlet-name>appServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>spring/appServlet/servlet-context.xml</param-value>
    </init-param>
  </servlet>

<!--   "appServlet" 서블릿을 웹 애플리케이션의 루트 경로에 매핑하는 역할을 합니다.
        이를 통해 웹 애플리케이션의 모든 요청은 "appServlet" 서블릿으로 전달되어 처리됩니다.
        * "/" 이거는 기본URL패턴으로 웹 어플리케이션의 루트 경로를 의미함.-->
  <servlet-mapping>
    <servlet-name>appServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

<!--   "encodingFilter"라는 이름의 필터를 생성하고, "encoding" 초기화 파라미터에 "UTF-8"을 설정하고,
       "forceEncoding" 초기화 파라미터에 "true"를 설정하는 역할을 합니다.
       이를 통해 필터는 웹 애플리케이션의 모든 요청에 대해 UTF-8 인코딩을 적용하도록 설정됩니다.
       이를 통해 문자 데이터의 깨짐 현상이나 인코딩 관련 문제를 방지할 수 있습니다.-->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>

<!--   "encodingFilter" 필터를 웹 애플리케이션의 모든 URL에 매핑하는 역할을 합니다.
        이를 통해 모든 요청에 대해 필터가 적용되어 지정된 작업(문자 인코딩 설정)이 수행됩니다.-->
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

</web-app>