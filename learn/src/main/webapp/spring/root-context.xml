<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--    bean을 생성하겠다. dataSource라는 이름에 org.apache.commons.dbcp2.BasicDataSource 객체를 사용하겠다.
        property(요소) 안에 name(프로퍼티의 이름) 과 value(해당 프로퍼티의 설정값)을 설정해준다
        따라서 dataSource bean에 BasicDataSource객체를 생성하고 driverClassName, url, username, password 프로퍼티에
        각각 설정된 값을 주입하는 역할을 한다. dbcp2를 사용하는거같음.-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/susan?serverTimezone=Asia/Seoul&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="1q2w3e4r"/>
    </bean>

<!--    sessionFactoryBean이라는 bean에 SqlSessionFactoryBean라는 객체를 생성하고 dataSource, mapperLocations, configLocation
        프로퍼티에 각각 설정된 값을 주입한다 그리고 여기서 <property name="dataSource" ref="dataSource"/> 이거는 위에서 만든
        dataSource Bean에 의존하고있다는걸 나타낸다.
        sessionFactoryBean - dataSource       - driverClassName, url, username, password
                           - mapperLocations
                           - configLocation
        이런식으로 활용을 할수있다는걸 알수있다.-->
    <bean id="sessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:/sqlMap/*.xml"/>
        <property name="configLocation" value="classpath:/config/myBatisConfig.xml"/>
    </bean>

<!--    "sqlSessionTemplate" 빈을 생성하고, 생성자를 통해 "sessionFactoryBean" 빈을 주입하는 역할을 합니다.
        SqlSessionTemplate은 MyBatis의 세션을 감싸는 역할을 하며, 데이터베이스 작업을 수행하기 위해 사용됩니다.
        이를 통해 Spring과 MyBatis를 통합하여 데이터베이스 작업을 보다 편리하게 수행할 수 있습니다. -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sessionFactoryBean"/>
    </bean>
</beans>